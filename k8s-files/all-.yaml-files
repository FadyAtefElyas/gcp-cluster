-------secret.yaml------
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: default
type: Opaque
data:
  mongodb-root-password: "MTIz"

---------db-secret.yaml-------
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: default
type: Opaque
data:
  username: "ZmFkeQo="
  password: "MTIzCg=="


--------service-acc.yaml--------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo-service-acc
  namespace: "default"
secrets:
  - name: monogo-secret
automountServiceAccountToken: true


---------role-binding.yaml--------
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: reader-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: mongo-srvice-acc
  namespace: default
roleRef:
  kind: Role
  name: reader-role
  apiGroup: rbac.authorization.k8s.io


-----------role.yaml----------------
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: reader-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
  
  -----------the last worked one----------

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: "mongo"
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      serviceAccountName: mongo-service-acc
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: us-central1-docker.pkg.dev/fady-401509/my-repository/mongo:v2
        command:
        -  docker-entrypoint.sh
        args: ["mongod", "--bind_ip_all", "--replSet", "rs0", "--auth", "--keyFile", "/tmp/my-key"]
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_DATABASE
          value: "admin"  
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        volumeMounts:
        - name: storage-pvc
          mountPath: /data/db
      - name: sidecar
        image: us-central1-docker.pkg.dev/fady-401509/my-repository/cvallance/mongo-k8s-sidecar:v1
        env:
        - name: MONGODB_DATABASE
          value: "admin"
        - name: MONGO_SIDECAR_POD_LABELS
          value: "app=mongo"
        - name: KUBERNATES_MONGO_SERVICE_NAME
          value: mongo
        - name: KUBE_NAMESPACE
          value: "default"
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
  volumeClaimTemplates:
  - metadata:
      name: storage-pvc
      annotations:
        volume.beta.kubernetes.io/storage-class: "standard-rwo"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources: 
        requests:
          storage: 2Gi
          
         
---------------node.js-app-deployment---------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs
  labels:
    app: nodejs
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
      - name: node
        image: us-central1-docker.pkg.dev/fady-401509/my-repository/node-app:v1
        ports:
        - containerPort: 27017
        env:
        - name: DBuser
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: DBpass
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: DBhosts
          value: "mongo-0.mongo,mongo-1.mongo,mongo-2.mongo"
